# Generated by Django 2.2.4 on 2019-08-23 01:34

from django.db import migrations, models
import django.utils.timezone
import sso_server.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('private_key', models.CharField(default=sso_server.models.ConsumerSecretKeyGenerator('private_key'), max_length=64, unique=True)),
                ('public_key', models.CharField(default=sso_server.models.ConsumerSecretKeyGenerator('public_key'), max_length=64, unique=True)),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='ConsumerPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('content_type_id', models.IntegerField(verbose_name='ContentTypeId')),
                ('codename', models.CharField(max_length=100, verbose_name='codename')),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': 'ConsumerPermission',
                'verbose_name_plural': 'ConsumerPermissions',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_token', models.CharField(default=sso_server.models.TokenSecretKeyGenerator('request_token'), max_length=64, unique=True)),
                ('access_token', models.CharField(default=sso_server.models.TokenSecretKeyGenerator('access_token'), max_length=64, unique=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('redirect_to', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserConsumerPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
        ),
    ]
